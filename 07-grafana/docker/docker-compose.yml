networks:
  monitoring:
    driver: bridge

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ../prometheus:/etc/prometheus
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=15d'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    restart: always
    networks:
      - monitoring
#    environment:
#      TZ: "Europe/Moscow"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    user: "root"
    volumes:
      - ../grafana/data:/var/lib/grafana
      - ../grafana/provisioning:/usr/share/grafana/conf/provisioning:rw
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_SERVER_ROOT_URL: "http://${HOSTNAME}.home.local:3000"
      GF_SERVER_DOMAIN: "home.local"
      GF_PATHS_PROVISIONING: /usr/share/grafana/conf/provisioning
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_UNIFIED_ALERTING_SCREENSHOTS_CAPTURE: true
      GF_LOG_FILTERS: rendering:debug
      TG_TOKEN: ${TG_TOKEN}
      TG_CHAT_ID: ${TG_CHAT_ID}
    ports:
      - 3000:3000
    restart: always
    networks:
      - monitoring
#    environment:
#      TZ: "Europe/Moscow"

  renderer:
    image: grafana/grafana-image-renderer:latest
    container_name: renderer
    ports:
      - 8081
    networks:
      - monitoring